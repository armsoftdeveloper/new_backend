# Generated by Django 5.2.5 on 2025-08-09 12:21

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0004_alter_toolpage_options_alter_toolpage_slug'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IntegrationPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('settings', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=40, unique=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('discount_type', models.CharField(choices=[('percent', 'Percent'), ('fixed', 'Fixed amount')], max_length=10)),
                ('value', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('max_uses', models.PositiveIntegerField(blank=True, null=True)),
                ('per_user_limit', models.PositiveIntegerField(default=1)),
                ('stackable', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plans', models.ManyToManyField(blank=True, related_name='coupons', to='users.plan')),
                ('tools', models.ManyToManyField(blank=True, related_name='coupons', to='main.toolpage')),
            ],
        ),
        migrations.CreateModel(
            name='CouponRedemption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_discounted', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redemptions', to='users.coupon')),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.plan')),
                ('subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.subscription')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'coupon'], name='users_coupo_user_id_08ffc6_idx')],
            },
        ),
        migrations.CreateModel(
            name='PlanIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('included', models.BooleanField(default=True)),
                ('monthly_limit', models.PositiveIntegerField(default=0)),
                ('overage_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_bindings', to='users.integrationpartner')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations', to='users.plan')),
            ],
            options={
                'unique_together': {('plan', 'partner')},
            },
        ),
        migrations.CreateModel(
            name='ToolUsageCounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(choices=[('month', 'Monthly'), ('year', 'Yearly')], default='month', max_length=10)),
                ('window_started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('used', models.PositiveIntegerField(default=0)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_counters', to='users.subscription')),
                ('tool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.toolpage')),
            ],
            options={
                'unique_together': {('subscription', 'tool', 'period')},
            },
        ),
        migrations.CreateModel(
            name='ToolUsageLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(choices=[('month', 'Monthly'), ('year', 'Yearly')], default='month', max_length=10)),
                ('limit', models.PositiveIntegerField(default=0)),
                ('overage_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tool_limits', to='users.plan')),
                ('tool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_limits', to='main.toolpage')),
            ],
            options={
                'unique_together': {('plan', 'tool', 'period')},
            },
        ),
    ]
